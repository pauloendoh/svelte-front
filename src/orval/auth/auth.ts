/**
 * Generated by orval v7.1.1 üç∫
 * Do not edit manually.
 * My API
 * OpenAPI spec version: 1.0.0
 */
import type {
  GetMe200,
  LogIn200,
  LogInBody,
  SignUp201,
  SignUpBody
} from '../myAPI.schemas'
import { myRequest } from '../../lib/utils/myAxios';


type SecondParameter<T extends (...args: any) => any> = Parameters<T>[1];


  /**
 * @summary Create user account
 */
export const signUp = (
    signUpBody: SignUpBody,
 options?: SecondParameter<typeof myRequest>,) => {
      return myRequest<SignUp201>(
      {url: `/sign-up`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: signUpBody
    },
      options);
    }
  /**
 * @summary Log in user
 */
export const logIn = (
    logInBody: LogInBody,
 options?: SecondParameter<typeof myRequest>,) => {
      return myRequest<LogIn200>(
      {url: `/log-in`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: logInBody
    },
      options);
    }
  /**
 * @summary Get current user
 */
export const getMe = (
    
 options?: SecondParameter<typeof myRequest>,) => {
      return myRequest<GetMe200>(
      {url: `/me`, method: 'GET'
    },
      options);
    }
  export type SignUpResult = NonNullable<Awaited<ReturnType<typeof signUp>>>
export type LogInResult = NonNullable<Awaited<ReturnType<typeof logIn>>>
export type GetMeResult = NonNullable<Awaited<ReturnType<typeof getMe>>>
