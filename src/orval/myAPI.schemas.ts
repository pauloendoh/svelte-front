/**
 * Generated by orval v7.1.1 üç∫
 * Do not edit manually.
 * My API
 * OpenAPI spec version: 1.0.0
 */
export type DeleteTodo404 = typeof DeleteTodo404[keyof typeof DeleteTodo404];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DeleteTodo404 = {
  'To-do_not_found': 'To-do not found',
} as const;

export type DeleteTodo403 = typeof DeleteTodo403[keyof typeof DeleteTodo403];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DeleteTodo403 = {
  'You_are_not_authorized_to_update_this_to-do': 'You are not authorized to update this to-do',
} as const;

export type DeleteTodo204 = {
  createdAt: string;
  description: string;
  /** @nullable */
  doneAt: string | null;
  id: number;
  updatedAt: string;
  userId: number;
};

export type UpdateTodo404 = typeof UpdateTodo404[keyof typeof UpdateTodo404];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const UpdateTodo404 = {
  'To-do_not_found': 'To-do not found',
} as const;

export type UpdateTodo403 = typeof UpdateTodo403[keyof typeof UpdateTodo403];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const UpdateTodo403 = {
  'You_are_not_authorized_to_update_this_to-do': 'You are not authorized to update this to-do',
} as const;

export type UpdateTodo200 = {
  createdAt: string;
  description: string;
  /** @nullable */
  doneAt: string | null;
  id: number;
  updatedAt: string;
  userId: number;
};

export type UpdateTodoBody = {
  description?: string;
  /** @nullable */
  doneAt?: string | null;
};

export type CreateTodo200 = {
  createdAt: string;
  description: string;
  /** @nullable */
  doneAt: string | null;
  id: number;
  updatedAt: string;
  userId: number;
};

export type CreateTodoBody = {
  description: string;
};

export type GetUserTodos200Item = {
  createdAt: string;
  description: string;
  /** @nullable */
  doneAt: string | null;
  id: number;
  updatedAt: string;
  userId: number;
};

export type GetMe200 = {
  email: string;
  id: number;
  token: string;
  tokenExpiresAt: string;
  username: string;
};

export type SignIn400 = typeof SignIn400[keyof typeof SignIn400];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const SignIn400 = {
  'Invalid_username,_email,_or_password': 'Invalid username, email, or password.',
} as const;

export type SignIn200 = {
  email: string;
  id: number;
  token: string;
  tokenExpiresAt: string;
  username: string;
};

export type SignInBody = {
  /** @minLength 6 */
  password: string;
  /**
   * @minLength 3
   * @maxLength 16
   */
  usernameOrEmail: string;
};

export type SignUp409 = typeof SignUp409[keyof typeof SignUp409];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const SignUp409 = {
  The_email_address_you_entered_is_already_in_use_Please_use_a_different_email_address: 'The email address you entered is already in use. Please use a different email address.',
  The_username_you_entered_is_already_in_use_Please_use_a_different_username: 'The username you entered is already in use. Please use a different username.',
} as const;

export type SignUp404 = typeof SignUp404[keyof typeof SignUp404];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const SignUp404 = {
  Not_found: 'Not found',
} as const;

export type SignUp201 = {
  email: string;
  id: number;
  token: string;
  tokenExpiresAt: string;
  username: string;
};

export type SignUpBody = {
  email: string;
  /** @minLength 6 */
  password1: string;
  /** @minLength 6 */
  password2: string;
  /**
   * @minLength 3
   * @maxLength 16
   */
  username: string;
};

export type GetAllUsers200Item = {
  email: string;
  id: number;
  username: string;
};

