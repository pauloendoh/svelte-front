openapi: 3.0.2
paths:
  /users:
    get:
      summary: Get all users
      tags:
        - users
      parameters: []
      operationId: getAllUsers
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: number
                    username:
                      type: string
                    email:
                      type: string
                  required:
                    - id
                    - username
                    - email
  /sign-up:
    post:
      summary: Create user account
      tags:
        - auth
      parameters:
        - name: x-custom-header
          in: header
          required: true
          schema:
            type: string
      operationId: signUp
      requestBody:
        description: Body
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  minLength: 3
                  maxLength: 16
                email:
                  type: string
                  format: email
                password1:
                  type: string
                  minLength: 6
                password2:
                  type: string
                  minLength: 6
              required:
                - username
                - email
                - password1
                - password2
      responses:
        '201':
          description: '201'
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: number
                  username:
                    type: string
                  email:
                    type: string
                  token:
                    type: string
                  tokenExpiresAt:
                    type: string
                required:
                  - id
                  - username
                  - email
                  - token
                  - tokenExpiresAt
        '404':
          description: '404'
          content:
            application/json:
              schema:
                type: string
                enum:
                  - Not found
        '409':
          description: '409'
          content:
            application/json:
              schema:
                type: string
                enum:
                  - >-
                    The email address you entered is already in use. Please use
                    a different email address.
                  - >-
                    The username you entered is already in use. Please use a
                    different username.
  /sign-in:
    post:
      summary: Sign in user
      tags:
        - auth
      parameters: []
      operationId: signIn
      requestBody:
        description: Body
        content:
          application/json:
            schema:
              type: object
              properties:
                usernameOrEmail:
                  type: string
                  minLength: 3
                  maxLength: 16
                password:
                  type: string
                  minLength: 6
              required:
                - usernameOrEmail
                - password
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: number
                  username:
                    type: string
                  email:
                    type: string
                  token:
                    type: string
                  tokenExpiresAt:
                    type: string
                required:
                  - id
                  - username
                  - email
                  - token
                  - tokenExpiresAt
        '400':
          description: '400'
          content:
            application/json:
              schema:
                type: string
                enum:
                  - Invalid username, email, or password.
  /me:
    get:
      summary: Get current user
      tags:
        - auth
      parameters: []
      operationId: getMe
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: number
                  username:
                    type: string
                  email:
                    type: string
                  token:
                    type: string
                  tokenExpiresAt:
                    type: string
                required:
                  - id
                  - username
                  - email
                  - token
                  - tokenExpiresAt
      security:
        - bearerAuth: []
info:
  title: My API
  version: 1.0.0
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
